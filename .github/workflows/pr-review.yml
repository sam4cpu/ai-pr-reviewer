name: AI PR Reviewer (Predictive & Network Intelligence Mode)

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  ai_predictive_review:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install openai requests numpy pandas scikit-learn networkx matplotlib plotly 
          pip install torch --extra-index-url https://download.pytorch.org/whl/cpu -v

      - name: Fetch PR diff
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "[INFO] Fetching PR diff..."
          curl -sSL -H "Accept: application/vnd.github.v3.diff" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            ${{ github.event.pull_request.url }} > pr_diff.patch
          if [ ! -s pr_diff.patch ]; then
            echo "[WARN] Empty diff file â€” skipping."
            exit 0
          fi

      - name: Run Predictive Reviewer
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "[START] Running Predictive AI PR Reviewer (Day 17)..."
          python .github/actions/ai_pr_reviewer/reviewer_predictive.py
          echo "[SUCCESS] Predictive review complete."

      - name: Upload predictive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: predictive-review
          path: |
            ai_predictive_insights.json
            ai_predictive_summary.md
            ai_predictive_graph.png

  train_predictive_model:
    runs-on: ubuntu-latest
    needs: ai_predictive_review
    steps:
      - uses: actions/checkout@v4
      - name: Train Predictive Model
        run: |
          echo "[INFO] Training predictive model from review history..."
          python .github/actions/ai_pr_reviewer/train_predictive_model.py
      - uses: actions/upload-artifact@v4
        with:
          name: predictive-model
          path: |
            predictive_model.pkl
            model_metrics.json
            training_log.md

  build_knowledge_graph:
    runs-on: ubuntu-latest
    needs: train_predictive_model
    steps:
      - uses: actions/checkout@v4
      - name: Build Knowledge Graph
        run: |
          echo "[INFO] Building AI Reviewer Knowledge Graph..."
          python .github/actions/ai_pr_reviewer/build_knowledge_graph.py
      - uses: actions/upload-artifact@v4
        with:
          name: knowledge-graph
          path: |
            knowledge_graph.json
            graph_visualization.png

  generate_dashboard_v17:
    runs-on: ubuntu-latest
    needs: build_knowledge_graph
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Generate Integrated Dashboard
        run: |
          echo "[START] Generating unified AI dashboard..."
          python .github/actions/ai_pr_reviewer/generate_dashboard_v17.py
          echo "[SUCCESS] Dashboard generation complete."

      - uses: actions/upload-artifact@v4
        with:
          name: ai-dashboard
          path: |
            dashboard_v17.html
            dashboard_summary.json

      - name: Post Dashboard Summary to PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          if [ -f dashboard_summary.json ]; then
            SUMMARY=$(cat dashboard_summary.json)
            curl -sSL \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              -d "{\"body\": \"### AI PR Reviewer Dashboard Summary \\n\\n$SUMMARY\\n\\n[View Full Dashboard Artifact](https://github.com/${GITHUB_REPOSITORY}/actions/runs/${{ github.run_id }})\"}" \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${PR_NUMBER}/comments"
          fi

      - name: Log Completion
        run: |
          echo "[FINAL SUMMARY] Predictive & Network Intelligence Mode complete."
          echo "[INFO] Dashboard and intelligence artifacts uploaded."







