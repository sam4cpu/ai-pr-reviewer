name: AI PR Reviewer (Networked Reviewer Mesh)

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NETWORK_HUB_REPO: ${{ secrets.NETWORK_HUB_REPO }}       # owner/repo for hub (e.g. my-org/ai-review-hub)
  NETWORK_HUB_TOKEN: ${{ secrets.NETWORK_HUB_TOKEN }}     # PAT with repo read/write to hub

jobs:
  ai_pr_review_and_sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies (shared)
        uses: ./.github/actions/install_deps

      - name: Fetch PR diff
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "[INFO] Fetching PR diff..."
          curl -sSL -H "Accept: application/vnd.github.v3.diff" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            ${{ github.event.pull_request.url }} > pr_diff.patch || true
          if [ ! -s pr_diff.patch ]; then
            echo "[WARN] pr_diff.patch empty â€” continuing to allow network steps."
          fi

      - name: Run existing reviewer (predictive / adaptive)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "[START] Running predictive/adaptive review..."
          python .github/actions/ai_pr_reviewer/reviewer_predictive.py || python .github/actions/ai_pr_reviewer/reviewer.py
          echo "[DONE] Local review produced artifacts."

      - name: Pull Global Hub State
        env:
          NETWORK_HUB_REPO: ${{ secrets.NETWORK_HUB_REPO }}
          NETWORK_HUB_TOKEN: ${{ secrets.NETWORK_HUB_TOKEN }}
        run: |
          echo "[START] Pulling global hub content..."
          python .github/actions/ai_pr_reviewer/global_sync.py pull
          echo "[DONE] Pulled hub state (if available)."

      - name: Fuse Local + Global Adaptive State
        run: |
          echo "[START] Merging local + global adaptive weights..."
          python .github/actions/ai_pr_reviewer/network_fusion.py
          echo "[DONE] Fusion complete. adaptive_weights.json updated."

      - name: Calibrate Reviewer Confidence
        run: |
          echo "[START] Calibrating reviewer confidence from history..."
          python .github/actions/ai_pr_reviewer/reviewer_confidence.py
          echo "[DONE] Confidence calibration saved as reviewer_confidence.json"

      - name: Generate Global Dashboard (local view)
        run: |
          echo "[START] Generating Global Dashboard..."
          python .github/actions/ai_pr_reviewer/generate_dashboard_v18.py
          echo "[DONE] dashboard_v18.html produced."

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: networked-ai-artifacts
          path: |
            ai_review.md
            ai_self_eval.json
            review_history.json
            adaptive_weights.json
            adaptive_network_weights.json
            reviewer_confidence.json
            dashboard_v18.html
          if-no-files-found: ignore

      - name: Push merged state back to hub (best-effort)
        env:
          NETWORK_HUB_REPO: ${{ secrets.NETWORK_HUB_REPO }}
          NETWORK_HUB_TOKEN: ${{ secrets.NETWORK_HUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          echo "[START] Pushing summary to network hub (best-effort)..."
          python .github/actions/ai_pr_reviewer/global_sync.py push
          echo "[DONE] Push attempted."

      - name: Post network sync summary to PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          SUMMARY="Network sync completed. Artifacts attached: dashboard_v18.html and adaptive weights."
          curl -sSL \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"body\": \"### Network Sync Summary\\n\\n$SUMMARY\"}" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${PR_NUMBER}/comments"

      - name: Log final
        run: |
          echo "[FINAL] Networked Reviewer Mesh finished."









